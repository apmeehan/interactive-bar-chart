$primary-color: var(--primary-color);
$primary-color-dark: var(--primary-color-dark);
$primary-color-light: var(--primary-color-light);

$container-width: 100px;

$button-travel: 3px;

$transition-duration--on: 0.2s;
$transition-duration--off: 0.5s;

.root {
  // To make svgs/imgs responsive.
  // Using min-height/min-width is safer than height/width, as otherwise could override existing height/width values of svgs/img
  // (and setting height/width to 100% could result in height/width of 0 if image's parent doesn't have an explicit height/width)
  svg,
  img {
    min-height: 100%;
    min-width: 100%;
  }

  display: inline-block;
  max-width: $container-width;
  width: 100%;
  font-weight: bold;
  font-size: 18px;
}

.button-container {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  gap: 5px;
  color: #333;
  user-select: none;

  &__button {
    margin: 0;

    height: 2em;
    width: 50%;
    max-width: 2em;
    border-radius: 9999px;
    cursor: pointer;
    text-shadow: 0 1.5px rgba(0, 0, 0, 0.3);

    &--left {
      color: white;
      background: rgba(100%, 100%, 100%, 0.1);
      border: 2px solid white;
      box-shadow: 0 $button-travel 0 rgba(100%, 100%, 100%, 0.4);

      &:hover {
        background: rgba(100%, 100%, 100%, 0.3);
      }

      &:active {
        box-shadow: 0 0 0 rgba(100%, 100%, 100%, 0.4);
      }
    }

    &--right {
      color: white;
      background: $primary-color;
      border-color: transparent;
      box-shadow: 0 $button-travel 0 $primary-color-dark;

      &:hover {
        background: $primary-color-light;
      }

      &:active {
        box-shadow: 0 0 0 $primary-color-dark;
      }
    }

    &:disabled {
      pointer-events: none;
      cursor: unset;
      opacity: 0.4;
    }

    &:active {
      transform: translateY($button-travel);
    }

    &:focus-visible {
      outline: 3px dashed $primary-color;
      outline-offset: 3px;
    }

    &:not(:focus-visible) {
      transition: all $transition-duration--off;
    }
    &:hover,
    &:active {
      transition: all $transition-duration--on;
    }
  }
}
