{"version":3,"file":"static/css/main.872921d1.chunk.css","sources":["webpack:///src/base.css","webpack:///src/components/BarChart/components/Bar/Bar.module.scss","webpack:///src/components/BarChart/components/ChartArea/ChartArea.module.scss","webpack:///src/components/BarChart/components/Axis/XAxis.module.scss","webpack:///src/components/BarChart/components/Axis/YAxis.module.scss","webpack:///src/components/BarChart/BarChart.module.scss","webpack:///src/components/ResponsiveEmoji/ResponsiveEmoji.module.scss","webpack:///src/components/StepperButton/StepperButton.module.scss","webpack:///src/InteractiveBarChart.module.scss","webpack:///src/components/ResizableContainer/ResizableContainer.module.scss"],"sourcesContent":["@import '~@fontsource/roboto/400.css';\n@import '~@fontsource/roboto/700.css';\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Roboto';\n  height: 100vh;\n  width: 100vw;\n}\n\nbutton {\n  border: none;\n  background: none;\n  font: inherit;\n  color: inherit;\n}\n","@import '/src/components/BarChart/style-constants';\n\n.bar {\n  width: 100%;\n  border-radius: 10px 10px 0 0;\n  display: flex;\n  flex-direction: column-reverse;\n  transition: height $TRANSITION_DURATION;\n}\n\n.pictogram {\n  min-height: 0;\n  flex: 1;\n  border-radius: 5px;\n\n  /* ~~~~~~ React Transition Group classes ~~~~~~ */\n  transition: flex $TRANSITION_DURATION, opacity $TRANSITION_DURATION;\n\n  &.enter {\n    flex: 0;\n    opacity: 0;\n  }\n  &.enter-active {\n    flex: 1;\n    opacity: 1;\n  }\n  &.exit-active {\n    flex: 0;\n    opacity: 0;\n  }\n\n  &--in-visible-bar {\n    opacity: 0.7;\n\n    &.enter-active {\n      flex: 1;\n      opacity: 0.7;\n    }\n  }\n}\n","@import '/src/components/BarChart/style-constants';\n\n.root {\n  height: 100%;\n  width: 100%;\n  padding: 0 ($CATEGORY_GAP / 2);\n  display: flex;\n  flex-direction: row;\n  gap: $CATEGORY_GAP;\n\n  .category {\n    flex: 1;\n    height: 100%;\n    display: flex;\n    gap: $SERIES_GAP;\n\n    .series {\n      flex: 1;\n      height: 100%;\n      position: relative;\n\n      .bar-container {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n      }\n    }\n  }\n}\n","@import '/src/components/BarChart/style-constants';\n\n.axis {\n  font-size: $FONT_SIZE;\n  font-weight: $FONT_WEIGHT_BOLD;\n  line-height: 1;\n  color: white;\n}\n\n.x-axis {\n  width: 100%;\n  border-top: $AXIS_LINE_WIDTH solid white;\n  margin-top: -$AXIS_LINE_WIDTH;\n  padding: 0 ($CATEGORY_GAP / 2);\n  display: flex;\n  justify-content: space-around;\n  gap: $CATEGORY_GAP;\n}\n\n.x-axis-label {\n  margin-top: $CATEGORY_AXIS_LABEL_MARGIN;\n  flex: 1;\n  height: $x-axis-label-height;\n  display: flex;\n  justify-content: center;\n}\n","@import '/src/components/BarChart/style-constants';\n\n.axis {\n  font-size: $FONT_SIZE;\n  font-weight: $FONT_WEIGHT_BOLD;\n  line-height: 1;\n  color: white;\n}\n\n.y-axis {\n  height: 100%;\n  width: $y-axis-total-padding;\n  border-right: $AXIS_LINE_WIDTH solid white;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n}\n\n.y-axis-label {\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  position: relative;\n  padding-right: $y-axis-tick-length + $QUANTITY_AXIS_LABEL_MARGIN;\n\n  .text {\n    position: relative;\n    top: -0.5em;\n  }\n\n  // axis tick\n  &::after {\n    content: '';\n    display: block;\n    height: $AXIS_LINE_WIDTH;\n    width: $y-axis-tick-length;\n    position: absolute;\n    right: 0;\n    top: 0;\n    background: white;\n  }\n\n  /* ~~~~~~ React Transition Group classes ~~~~~~ */\n  min-height: 0;\n  transition: flex $TRANSITION_DURATION, opacity $TRANSITION_DURATION;\n\n  &.enter {\n    flex: 0;\n    opacity: 0;\n  }\n  &.enter-active {\n    flex: 1;\n    opacity: 1;\n  }\n  &.exit-active {\n    flex: 0;\n    opacity: 0;\n  }\n}\n","@import './style-constants';\n\n$category-axis-total-padding: $CATEGORY_LABEL_SIZE + $CATEGORY_AXIS_LABEL_MARGIN;\n$quantity-axis-total-padding: $QUANTITY_AXIS_TICK_LENGTH + $QUANTITY_LABEL_SIZE +\n  $QUANTITY_AXIS_LABEL_MARGIN;\n\n$x-axis-total-padding: $category-axis-total-padding;\n$y-axis-total-padding: $quantity-axis-total-padding;\n\n.main-container {\n  position: relative;\n  padding-left: $y-axis-total-padding;\n  padding-bottom: $x-axis-total-padding;\n  width: 100%;\n  height: 100%;\n\n  svg,\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.x-axis-layout-wrapper {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  padding-left: $y-axis-total-padding;\n}\n\n.y-axis-layout-wrapper {\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  padding-bottom: $x-axis-total-padding;\n}\n",".root {\n  width: 100%;\n  height: 100%;\n}\n","$primary-color: var(--primary-color);\n$primary-color-dark: var(--primary-color-dark);\n$primary-color-light: var(--primary-color-light);\n\n$container-width: 100px;\n\n$button-travel: 3px;\n\n$transition-duration--on: 0.2s;\n$transition-duration--off: 0.5s;\n\n.root {\n  // To make svgs/imgs responsive.\n  // Using min-height/min-width is safer than height/width, as otherwise could override existing height/width values of svgs/img\n  // (and setting height/width to 100% could result in height/width of 0 if image's parent doesn't have an explicit height/width)\n  svg,\n  img {\n    min-height: 100%;\n    min-width: 100%;\n  }\n\n  display: inline-block;\n  max-width: $container-width;\n  width: 100%;\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.button-container {\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n  color: #333;\n  user-select: none;\n\n  &__button {\n    margin: 0;\n\n    height: 2em;\n    width: 50%;\n    max-width: 2em;\n    border-radius: 9999px;\n    cursor: pointer;\n    text-shadow: 0 1.5px rgba(0, 0, 0, 0.3);\n\n    &--left {\n      color: white;\n      background: rgba(100%, 100%, 100%, 0.1);\n      border: 2px solid white;\n      box-shadow: 0 $button-travel 0 rgba(100%, 100%, 100%, 0.4);\n\n      &:hover {\n        background: rgba(100%, 100%, 100%, 0.3);\n      }\n\n      &:active {\n        box-shadow: 0 0 0 rgba(100%, 100%, 100%, 0.4);\n      }\n    }\n\n    &--right {\n      color: white;\n      background: $primary-color;\n      border-color: transparent;\n      box-shadow: 0 $button-travel 0 $primary-color-dark;\n\n      &:hover {\n        background: $primary-color-light;\n      }\n\n      &:active {\n        box-shadow: 0 0 0 $primary-color-dark;\n      }\n    }\n\n    &:disabled {\n      pointer-events: none;\n      cursor: unset;\n      opacity: 0.4;\n    }\n\n    &:active {\n      transform: translateY($button-travel);\n    }\n\n    &:focus-visible {\n      outline: 3px dashed $primary-color;\n      outline-offset: 3px;\n    }\n\n    &:not(:focus-visible) {\n      transition: all $transition-duration--off;\n    }\n    &:hover,\n    &:active {\n      transition: all $transition-duration--on;\n    }\n  }\n}\n","@import '/src/components/BarChart/style-constants';\n\n.root {\n  margin: auto;\n  padding: 20px;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n}\n\n.chart {\n  flex: 1;\n  margin-bottom: 1rem;\n}\n\n.buttons {\n  display: flex;\n  justify-content: space-around;\n  margin-left: $y-axis-total-padding;\n  padding: 0 ($CATEGORY_GAP / 2);\n  gap: $CATEGORY_GAP;\n}\n","$ARROW_SIZE: 20px;\n$ARROW_OFFSET: 10px;\n$TEXT_WIDTH: 100px;\n\n.root {\n  position: relative;\n  outline: 1px dashed rgba(white, 0.5);\n  height: fit-content;\n  width: fit-content;\n  max-height: 100%;\n  max-width: 100%;\n\n  .inner {\n    resize: both;\n    overflow: hidden;\n    max-height: 100%;\n    max-width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &::before,\n  &::after {\n    display: block;\n    position: absolute;\n    color: rgba(white, 0.5);\n  }\n\n  &::before {\n    content: 'â‡§';\n    font-size: $ARROW_SIZE;\n    bottom: -$ARROW_SIZE - $ARROW_OFFSET;\n    right: -$ARROW_SIZE / 2;\n  }\n\n  &::after {\n    content: 'RESIZE ME';\n    font-size: 0.9rem;\n    width: $TEXT_WIDTH;\n    text-align: center;\n    bottom: calc(-#{$ARROW_SIZE + $ARROW_OFFSET} - 1.1em);\n    right: -$TEXT_WIDTH / 2;\n  }\n}\n"],"mappings":"AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;;ACAA;;ACAA;;ACAA;;ACOA;;ACTA;;ACWA;;ACTA;;ACEA;;","sourceRoot":""}